curve(dnorm(x, mean = mean(lynx), sd = sd(lynx)),
col = "thistle4",  # Color of curve
lwd = 2,           # Line width of 2 pixels
add = TRUE)        # Superimpose on previous graph
# Add two kernel density estimators
lines(density(lynx), col = "blue", lwd = 2)
lines(density(lynx, adjust = 3), col = "purple", lwd = 2)
# Add a rug plot
rug(lynx, lwd = 2, col = "gray")
# Add two kernel density estimators
lines(density(lynx), col = "blue", lwd = 4) #DUM: density estimator
lines(density(lynx, adjust = 5), col = "purple", lwd = 2)
lines(density(lynx, adjust = 0), col = "purple", lwd = 2)
lines(density(lynx, adjust = 1), col = "purple", lwd = 2)
lines(density(lynx, adjust = 1.5), col = "purple", lwd = 2)
3
lines(density(lynx, adjust = 1), col = "purple", lwd = 2)
lines(density(lynx, adjust = 6), col = "purple", lwd = 2)
library(datasets)  # Load/unload base packages manually
head(iris)
summary(iris$Species)       # Categorical variable
summary(iris$Sepal.Length)  # Quantitative variable
summary(iris)               # Entire data frame
# Use pacman to load add-on packages as desired
pacman::p_load(pacman, psych)
head(iris)
# Get info on package
p_help(psych)           # Opens package PDF in browser
# Get info on package
p_help(psych)           # Opens package PDF in browser
p_help(psych, web = F)  # Opens help in R Viewer
describe(iris$Sepal.Length)  # One quantitative variable
describe(iris)               # Entire data frame
library(datasets)  # Load/unload base packages manually
head(iris)
hist(iris$Petal.Length)
summary(iris$Petal.Length)
summary(iris$Species)  # Get names and n for each species
# Versicolor
hist(iris$Petal.Length[iris$Species == "versicolor"],
main = "Petal Length: Versicolor")
# Virginica
hist(iris$Petal.Length[iris$Species == "virginica"],
main = "Petal Length: Virginica")
# Setosa
hist(iris$Petal.Length[iris$Species == "setosa"],
main = "Petal Length: Setosa")
# Short petals only (all Setosa)
hist(iris$Petal.Length[iris$Petal.Length < 2],
main = "Petal Length < 2")
# Setosa
hist(iris$Petal.Length[iris$Species == "setosa"],
main = "Petal Length: Setosa")
# Short Virginica petals only
hist(iris$Petal.Length[iris$Species == "virginica" &
iris$Petal.Length < 5.5],
main = "Petal Length: Short Virginica")
# Format: data[rows, columns]
# Leave rows or columns blank to select all
i.setosa <- iris[iris$Species == "setosa", ]
head(i.setosa)
summary(i.setosa$Petal.Length)
hist(i.setosa$Petal.Length)
n1 <- 15  # Double precision by default
n1
typeof(n1)
n2 <- 1.5
n2
typeof(n2)
c1 <- "c"
c1
typeof(c1)
c2 <- "a string of text"
c2
typeof(c2)
l1 <- TRUE
l1
typeof(l1)
l2 <- F
l2
typeof(l2)
v1 <- c(1, 2, 3, 4, 5)
v1
v1 <- c(1, 2, 3, 4, 5) #c (concatenate)
v1
is.vector(v1)
v1 <- c(1, 2, 3, 4, 5)
v1
v1 <- (1, 2, 3, 4, 5)
is.vector(v1)
v2 <- c("a", "b", "c")
v2
is.vector(v2)
v3 <- c(TRUE, TRUE, FALSE, FALSE, TRUE)
v3
is.vector(v3)
m1 <- matrix(c(T, T, F, F, T, F), nrow = 2)
m1
m2 <- matrix(c("a", "b",
"c", "d"),
nrow = 2,
byrow = T)
m2
m2 <- matrix(c("a", "b",
"c", "d"),
nrow = 2)
m2
# Give data, then dimemensions (rows, columns, tables)
a1 <- array(c( 1:24), c(4, 3, 2))
a1
vNumeric   <- c(1, 2, 3)
vCharacter <- c("a", "b", "c")
vLogical   <- c(T, F, T)
dfa <- cbind(vNumeric, vCharacter, vLogical)
dfa  # Matrix of one data type
df <- as.data.frame(cbind(vNumeric, vCharacter, vLogical))
df  # Makes a data frame with three different data types
df <- as.data.frame(cbind(vNumeric, vCharacter, vLogical))
df  # Makes a data frame with three different data types
o1 <- c(1, 2, 3)
o2 <- c("a", "b", "c", "d")
o3 <- c(T, F, T, T, F)
list1 <- list(o1, o2, o3)
list1
list2 <- list(o1, o2, o3, list1)  # Lists within lists!
list2
(x1 <- 1:3)
clear all()
(x1 <- 1:3)
(y  <- 1:9)
# Combine variables
(df1 <- cbind.data.frame(x1, y))
typeof(df1$x1)
str(df1)
typeof(df2$x2)
(x2  <- as.factor(c(1:3)))
(df2 <- cbind.data.frame(x2, y))
typeof(df2$x2)
str(df2)
x3  <- c(1:3)
df3 <- cbind.data.frame(x3, y)
(df3$x3 <- factor(df3$x3,
levels = c(1, 2, 3)))
typeof(df3$x3)
str(df3)
typeof(df3$x3)
str(df3)
x4  <- c(1:3)
df4 <- cbind.data.frame(x4, y)
df4
x4  <- c(1:3)
x4
y
df4 <- cbind.data.frame(x4, y)
df4
vNumeric   <- c(1, 2, 3)
vNumeric
vCharacter
vCharacter
vCharacter <- c("a", "b", "c")
vLogical   <- c(T, F, T)
vCharacter
vLogical
dfa <- cbind(vNumeric, vCharacter, vLogical)
dfa
x5 <-c(1:3)
x5
(y  <- 1:9)
df5 <- cbind.data.frame(x4,y)
df5
df5 <- cbind(x4,y)
df5
df5 <- rbind(x4,y)
df5
df5 <- cbind.data(x4,y)
n1 <- 15  # Double precision by default
n1
typeof(n1) #DUM: We get [1] 15 "[1]"  "its the index number for
n2 <- 1.5
n2
typeof(n2)
c1 <- "c"
c1
typeof(c1)
c2 <- "a string of text"
c2
typeof(c2)
l1 <- TRUE
l1
typeof(l1)
l2 <- F
l2
typeof(l2)
v1 <- c(1, 2, 3, 4, 5) #DUM: c (concatenate), combine or connect
#DUM:without C it returns an error
v1
is.vector(v1)
is.int(v1)
is.integer(v1)
is.character(v1)
v2 <- c("a", "b", "c")
v2
is.vector(v2)
v3 <- c(TRUE, TRUE, FALSE, FALSE, TRUE)
v3
is.vector(v3)
m1 <- matrix(c(T, T, F, F, T, F), nrow = 2)
m1
m1 <- matrix(c(T, T, F, F, T, F), nrow = 3)
m1
m1 <- matrix(c(T, T, F, F, T, F), nrow = 6)
m1
m1 <- matrix(c(T, T, F, F, T, F), nrow = 10)
m1
m2 <- matrix(c("a", "b",
"c", "d"),
nrow = 2,
byrow = T) #DUM: Important to take use both: nrow and byrow
#shape the matrix as we want
m2
m2 <- matrix(c("a", "b",
"c", "d"),
nrow = 2,
) #DUM: Important to take use both: nrow and byrow
#shape the matrix as we want
m2
# Give data, then dimensions (rows, columns, tables)
a1 <- array(c( 1:24), c(4, 3, 2))
a1
# Give data, then dimensions (rows, columns, tables)
a1 <- array(c( 1:24), c(4, 3, 1))
a1
# Give data, then dimensions (rows, columns, tables)
a1 <- array(c( 1:24), c(4, 3, 3))
a1
# Give data, then dimensions (rows, columns, tables)
a1 <- array(c( 1:2), c(4, 3, 3))
a1
## 1. Mandatory lines
# Similiar thing as clc;clear all;close all in MATLAB
rm(list = ls()); # clear workspace variables
cat("\014") # it means ctrl+L. clear window
graphics.off() # close all plots
DIR<-"C:\Users\dario\Documents\Github\Teacher-A-Statististical-Methods-BME-423\All_Data_2020"; # Current directory
DIR<-"/Users/brittanypkay/Dropbox (University of Southern California)/BME423 2019Fa/Lectures/Week 1/Student stats"; # Current directory
DIR<-"C:\Users\dario\Documents\Github\Teacher-A-Statististical-Methods-BME-423";
DIR<-"C:/Users/dario/Documents/Github/Teacher-A-Statististical-Methods-BME-423";
#DIR<-"/Users/brittanypkay/Dropbox (University of Southern California)/BME423 2019Fa/Lectures/Week 1/Student stats"; # Current directory
DIR<-"C:/Users/dario/Documents/Github/Teacher-A-Statististical-Methods-BME-423";
setwd(DIR); # change working directory
## 2. Load library
# install.packages("psych")
# install.packages("car")
# install.packages("lsr")
# install.packages("ggplot2")
library(psych) # function describeBy
library(lsr)
library(survival)
library(ggplot2)
library(car) # function scatterplot
library(lattice) # function histogram
install.packages("pacman")
pacman::p_load(psych)
pacman::p_load(lsr)
pacman::p_load(survival)
pacman::p_load(ggplot2)
pacman::p_load(car)
pacman::p_load(lattice)
## 3. Student data analysis
# Heart rate/Height/Sex/Side of room/Exercise frequency/Handedness/WidthRightThumb
DATA<-read.csv("All_Data_2020.csv", sep=",")
## 2. Load library
# install.packages("psych")
# install.packages("car")
# install.packages("lsr")
# install.packages("ggplot2")
library(psych) # function describeBy
library(lsr)
library(survival)
library(ggplot2)
library(car) # function scatterplot
library(lattice) # function histogram
## 3. Student data analysis
# Heart rate/Height/Sex/Side of room/Exercise frequency/Handedness/WidthRightThumb
DATA<-read.csv("All_Data_2020.csv", sep=",")
#DIR<-"/Users/brittanypkay/Dropbox (University of Southern California)/BME423 2019Fa/Lectures/Week 1/Student stats"; # Current directory
DIR<-"C:/Users/dario/Documents/Github/Teacher-A-Statististical-Methods-BME-423";
## 3. Student data analysis
# Heart rate/Height/Sex/Side of room/Exercise frequency/Handedness/WidthRightThumb
DATA<-read.csv("All_Data_2020.csv", sep=",")
## 3. Student data analysis
# Heart rate/Height/Sex/Side of room/Exercise frequency/Handedness/WidthRightThumb
DATA<-read.csv("All_Data_2020.csv", sep=",")
#DIR<-"/Users/brittanypkay/Dropbox (University of Southern California)/BME423 2019Fa/Lectures/Week 1/Student stats"; # Current directory
DIR<-"C:/Users/dario/Documents/Github/Teacher-A-Statististical-Methods-BME-423";
## 3. Student data analysis
# Heart rate/Height/Sex/Side of room/Exercise frequency/Handedness/WidthRightThumb
DATA<-read.csv("All_Data_2020.csv", sep=",")
setwd(DIR); # change working directory
#DIR<-"/Users/brittanypkay/Dropbox (University of Southern California)/BME423 2019Fa/Lectures/Week 1/Student stats"; # Current directory
DIR<-"C:/Users/dario/Documents/Github/Teacher-A-Statististical-Methods-BME-423";
setwd(DIR); # change working directory
## 3. Student data analysis
# Heart rate/Height/Sex/Side of room/Exercise frequency/Handedness/WidthRightThumb
DATA<-read.csv("All_Data_2020.csv", sep=",")
## 3. Student data analysis
# Heart rate/Height/Sex/Side of room/Exercise frequency/Handedness/WidthRightThumb
DATA<-read.csv("All_Data_2019.csv", sep=",")
## 3. Student data analysis
# Heart rate/Height/Sex/Side of room/Exercise frequency/Handedness/WidthRightThumb
DATA<-read.csv("All_Data_2020.csv", sep=",")
mean(DATA$HR)
var(DATA$HR) # variance
sd(DATA$HR) # standard deviation
range(DATA$HR)
quantile(x=DATA$HR,probs=.5) # median
quantile(x=DATA$HR,probs=c(.25,.75)) # same as interquartile range
IQR(x=DATA$HR) # interquartile range
summary(DATA)
describe(DATA)
summary(DATA$HR)
# 4. Analysis of HR
# histogram
hist(x = DATA$HR,
main="Histogram of HR for all students",     # Title
ylab="Frequency",                            # axis label
xlab="HR (beats/min)",                       # axis label
#     density = 20,                               # shading lines: 20 per inch
#     angle = 20,                                 # angle of the shading lines is 20 degrees
#     border = "black",                           # colour of the borders of the bars
#     col = "black",                              # color of the shading lines. gray20 is darker than gray80
labels = TRUE,                               # frequency labels to each bar
xlim = c(40,140),                            # limits of axis
ylim = c(0,30),                              # limits of axis
breaks=seq(40,140,by=10)                     # bin breaks
)
# boxplot
boxplot(x=DATA$HR,
main="Boxplot of HR for all students",     # Title
ylab="HR (beats/min)",                     # axis labels
xlab="All students",                       # axis labels
border="black",                            # dim the border
#        frame.plot=FALSE,                         # frame border Y/N
#        staplewex=1,                              # staple Y/N
#        whisklty=3,                               # line type for whisker
ylim = c(40,140)                           # limits of axis
)
# HR Results stratified by sex
#  -descriptive stats
describeBy(x=DATA$HR,group=DATA$Sex) # this does not give qunatiles
# Option 1 (output is not so easy to read)
aggregate(HR ~ Sex, data = DATA, fivenum) # "fivenum" reports the min, 1st quart., median, 3rd quart., and max (uses a diff. method from "summary")
# Option 2 (kinda clunky)
Ma <- subset(DATA, Sex == 'M')
Fe <- subset(DATA, Sex == 'F')
summary(Ma)
summary(Fe)
# histogram (one possible way)
histogram(~ HR | Sex, data = DATA)   # looks like hist and histogram are different
# so we do this the clunky way - separately for M and F
hist(x = Ma$HR,
main="Histogram of HR for males",      # Title
ylab="Frequency",                      # axis label
xlab="HR (beats/min)",                 # axis label
#     density = 20,                    # shading lines: 20 per inch
#     angle = 20,                      # angle of the shading lines is 20 degrees
#     border = "black",                # colour of the borders of the bars
#     col = "black",                   # color of the shading lines. gray20 is darker tsummhan gray80
labels = TRUE,                         # frequency labels to each bar
xlim = c(40,140),                      # limits of axis
ylim = c(0,20),                        # limits of axis
breaks=seq(40,140,by=10)               # bin breaks
)
hist(x = Fe$HR,
main="Histogram of HR for females",     # Title
ylab="Frequency",                       # axis label
xlab="HR (beats/min)",                  # axis label
#     density = 20,                     # shading lines: 20 per inch
#     angle = 20,                       # angle of the shading lines is 20 degrees
#     border = "black",                 # colour of the borders of the bars
#     col = "black",                    # color of the shading lines. gray20 is darker than gray80
labels = TRUE,                          # frequency labels to each bar
xlim = c(40,140),                       # limits of axis
ylim = c(0,20),                         # limits of axis
breaks=seq(40,140,by=10)                # bin breaks
)
# boxplot
boxplot(x=Ma$HR,
main="Boxplot of HR for males",     # Title
ylab="HR (beats/min)",              # axis labels
xlab="Males",                       # axis labels
border="black",                     # dim the border
#        frame.plot=FALSE,          # frame border Y/N
#        staplewex=1,               # staple Y/N
#        whisklty=3,                # line type for whisker
ylim = c(40,140)                    # limits of axis
)
# boxplot
boxplot(x=Fe$HR,
main="Boxplot of HR for females",     # Title
ylab="HR (beats/min)",                # axis labels
xlab="Females",                       # axis labels
border="black",                       # dim the border
#        frame.plot=FALSE,            # frame border Y/N
#        staplewex=1,                 # staple Y/N
#        whisklty=3,                  # line type for whisker
ylim = c(40,140)                      # limits of axis
)
# - Exploring if HR data are Normal using qqplots (qqnorm)
qqnorm(DATA$HR)
qqline(DATA$HR)
# 5. Analysis of Width of Right Thumb
# histogram
hist(x = DATA$WRT,
main="Histogram of Width of Right Thumb \n for all students",     # Title
ylab="Frequency",                                              # axis label
xlab="WRT (mm)",                                               # axis label
#     density = 20,                                            # shading lines: 20 per inch
#     angle = 20,                                              # angle of the shading lines is 20 degrees
#     border = "black",                                        # colour of the borders of the bars
#     col = "black",                                           # color of the shading lines. gray20 is darker than gray80
labels = TRUE,                                                 # frequency labels to each bar
xlim = c(0,60),                                                # limits of axis
ylim = c(0,40),                                                # limits of axis
breaks=seq(0,60,by=5)                                          # bin breaks
)
# boxplot
boxplot(x=DATA$WRT,
main="Boxplot of Width of Right Thumb \n for all students",   # Title
ylab="WRT (mm)",                                           # axis labels
xlab="All students",                                       # axis labels
border="black",                                            # dim the border
#        frame.plot=FALSE,                                 # frame border Y/N
#        staplewex=1,                                      # staple Y/N
#        whisklty=3,                                       # line type for whisker
ylim = c(0,60)                                             # limits of axis
)
# - Exploring if WRT data are Normal using qqplots (qqnorm)
qqnorm(DATA$WRT)
qqline(DATA$WRT)
# 6. boxplot for Height
boxplot(x=DATA$Height,
main="Boxplot of Height for all students",     # Title
lim=c(-1,2),ylim=c(0,1.5),                        # axis labels
xlab="All students",                           # axis labels
border="black",                                # dim the border
#        frame.plot=FALSE,                     # frame border Y/N
#        staplewex=1,                          # staple Y/N
#        whisklty=3,                           # line type for whisker
ylim = c(50,84)                                # limits of axis
)
# 7.  Bar plot/histogram for Eye Color
p <- ggplot(data.frame(DATA$Ecolor), aes(x=DATA$Ecolor),
#     density = 20,                                 # shading lines: 20 per inch
#     angle = 20,                                   # angle of the shading lines is 20 degrees
#     border = "black",                             # colour of the borders of the bars
#     col = "black",                                # color of the shading lines. gray20 is darker than gray80
labels = TRUE,                                      # frequency labels to each bar
)
p + geom_bar() + ggtitle("Histogram of Eye Color for all students") +
ylab("Frequency") +
xlab("Eye Color")
# 8. X-Y (scatter) plot of WRT vs Height
#plot
plot(y=DATA$WRT, x=DATA$Height,ylim=c(10,30),xlim=c(55,80),
main="Width of Rt. Thumb versus Height",     # Title
ylab="WRT (mm)",                                                  # axis labels
xlab="Height (inches)",                                           # axis labels
)
## 3. Student data analysis
# Heart rate/Height/Sex/Side of room/Exercise frequency/Handedness/WidthRightThumb
DATA<-read.csv("All_Data_2020.csv", sep=",")
mean(DATA$HR)
## 1. Mandatory lines
# Similiar thing as clc;clear all;close all in MATLAB
rm(list = ls()); # clear workspace variables
cat("\014") # it means ctrl+L. clear window
graphics.off() # close all plots
#DIR<-"/Users/brittanypkay/Dropbox (University of Southern California)/BME423 2019Fa/Lectures/Week 1/Student stats"; # Current directory
DIR<-"C:/Users/dario/Documents/Github/Teacher-A-Statististical-Methods-BME-423";
setwd(DIR); # change working directory
## 2. Load library
# install.packages("psych")
# install.packages("car")
# install.packages("lsr")
# install.packages("ggplot2")
library(psych) # function describeBy
library(lsr)
library(survival)
library(ggplot2)
library(car) # function scatterplot
library(lattice) # function histogram
## 3. Student data analysis
# Heart rate/Height/Sex/Side of room/Exercise frequency/Handedness/WidthRightThumb
DATA<-read.csv("All_Data_2020.csv", sep=",")
mean(DATA$HR)
DIR<-"/Users/brittanypkay/Dropbox (University of Southern California)/BME423 2019Fa/Lectures/Week 1/Student stats"; # Current directory
setwd(DIR); # change working directory
## 1. Mandatory lines
# Similiar thing as clc;clear all;close all in MATLAB
rm(list = ls()); # clear workspace variables
cat("\014") # it means ctrl+L. clear window
graphics.off() # close all plots
DIR<-"/Users/brittanypkay/Dropbox (University of Southern California)/BME423 2019Fa/Lectures/Week 1/Student stats"; # Current directory
setwd(DIR); # change working directory
## 1. Mandatory lines
# Similiar thing as clc;clear all;close all in MATLAB
rm(list = ls()); # clear workspace variables
cat("\014") # it means ctrl+L. clear window
graphics.off() # close all plots
DIR<-"/Users/brittanypkay/Dropbox (University of Southern California)/BME423 2019Fa/Lectures/Week 1/Student stats"; # Current directory
setwd(DIR); # change working directory
